#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import dotenv from 'dotenv';

// Configurar __dirname para ES modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Carregar vari√°veis de ambiente do arquivo .env.local (desenvolvimento local)
dotenv.config({ path: '.env.local' });

// Para GitHub Actions, as vari√°veis v√™m do ambiente do sistema
const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || '';
const SUPABASE_ANON_KEY = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY || '';

if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  console.error('‚ùå Vari√°veis de ambiente n√£o encontradas:');
  console.error('- NEXT_PUBLIC_SUPABASE_URL:', SUPABASE_URL ? '‚úì' : '‚úó');
  console.error('- NEXT_PUBLIC_SUPABASE_ANON_KEY:', SUPABASE_ANON_KEY ? '‚úì' : '‚úó');
  process.exit(1);
}

const configContent = `// Configura√ß√£o p√∫blica para os arquivos JavaScript est√°ticos
// Este arquivo √© gerado automaticamente pelo build process
window.SUPABASE_URL = '${SUPABASE_URL}';
window.SUPABASE_ANON_KEY = '${SUPABASE_ANON_KEY}';
`;

const outputPath = path.join(__dirname, '../public/js/config.js');

fs.writeFileSync(outputPath, configContent);
console.log('‚úÖ Arquivo de configura√ß√£o p√∫blico gerado:', outputPath);
console.log('üìã Configura√ß√µes:', {
  url: SUPABASE_URL,
  key: SUPABASE_ANON_KEY ? '***' : 'N√ÉO DEFINIDA'
});
